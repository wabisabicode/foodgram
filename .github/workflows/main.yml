# for backend:
# python manage.py migrate
# python manage.py collectstatic
# cp -r collectstatic/. /backend_static/static/
# cd common && python ../manage.py shell < load_data.py
name: Main Foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  backend_tests:
    name: Test backend with linter (flake8)
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:13.10
    #     env:
    #       POSTGRES_USER: django_user
    #       POSTGRES_PASSWORD: django_password
    #       POSTGRES_DB: django_db
    #     ports:
    #       - 5432:5432
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements/requirements.lint.txt
          pip install -r ./backend/requirements/requirements.txt

      - name: Run linter (flake8)
        run: python -m flake8 backend/

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest